// <auto-generated />
using System;
using MatchPredictor.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MatchPredictor.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250701095109_AddDataProtectionKeysTableAppContext")]
    partial class AddDataProtectionKeysTableAppContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MatchPredictor.Domain.Models.MatchData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AwayTeam")
                        .HasColumnType("text");

                    b.Property<double>("AwayWin")
                        .HasColumnType("double precision");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<double>("Draw")
                        .HasColumnType("double precision");

                    b.Property<string>("HomeTeam")
                        .HasColumnType("text");

                    b.Property<double>("HomeWin")
                        .HasColumnType("double precision");

                    b.Property<string>("League")
                        .HasColumnType("text");

                    b.Property<double>("OverFourGoals")
                        .HasColumnType("double precision");

                    b.Property<double>("OverThreeGoals")
                        .HasColumnType("double precision");

                    b.Property<double>("OverTwoGoals")
                        .HasColumnType("double precision");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<double>("UnderThreeGoals")
                        .HasColumnType("double precision");

                    b.Property<double>("UnderTwoGoals")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("MatchDatas");
                });

            modelBuilder.Entity("MatchPredictor.Domain.Models.Prediction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AwayTeam")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("ConfidenceScore")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HomeTeam")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("League")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PredictedOutcome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PredictionCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Predictions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("text");

                    b.Property<string>("Xml")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
